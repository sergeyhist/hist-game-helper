#!/bin/bash
toolsupdater() {
	cd  $TOOLSPATH; name=$(basename -s .git "$1")
	listoptions "Options" "Install ${blc} - Check \"${cyc}$1${blc}\" for additional information or necessary dependencies${noc}|Update|Uninstall"
	if [[ "$select_ans" == "1" ]]; then if [[ -d "$name" ]]; then rm -rf "$name"; fi; git clone $2 "$1"; cd "$name"; tup_build="1"
	elif [[ "$select_ans" == "2" ]]; then cd "$name"; eval "git reset --hard; git pull $1 master" > "$TEMPPATH/.toolcheck"
		while read line; do if [[ $line != *"Already up to date"* ]]; then tup_build="1"; else tup_build="0"; fi; done < "$TEMPPATH/.toolcheck"
		if [[ $tup_build != "1" ]]; then echo -e "\nAlready ${grc}up to date${noc}!"; fi; fi
	if [[ "$tup_build" == "1" ]]; then
		if [[ "$name" != "mf-install" && "$name" != "mf-installcab" ]]; then
			if [[ $name == "dxvk" || $name == "vkd3d-proton" ]]; then if [[ -d "dlls" ]]; then rm -rf dlls; fi; ./package-release.sh master dlls --no-package
			elif [[ $name == "MangoHud" ]]; then ./build.sh build; ./build.sh package; ./build.sh install
			elif [[ $name == "gamemode" ]]; then git checkout 1.6.1; ./bootstrap.sh
			elif [[ $name == "vkBasalt" ]]; then meson --buildtype=release --prefix=/usr builddir; ninja -C builddir install
			elif [[ $name == "libstrangle" ]]; then make; sudo make install; fi; fi; fi
	if [[ "$select_ans" == "3" ]]; then
		cd "$name"
		if [[ $name == "MangoHud" ]]; then ./build.sh uninstall
		elif [[ $name == "gamemode" ]]; then systemctl --user stop gamemoded.service; sudo ninja uninstall -C builddir
		elif [[ $name == "vkBasalt" ]]; then sudo ninja -C builddir uninstall
		elif [[ $name == "libstrangle" ]]; then sudo make uninstall; fi
		cd ..; rm -rf "$name"; fi
}

toolsinstaller() {
	listoptions "Installer" "Pineapple-Linux|linux-tkg|nvidia-all|wine-tkg-git|GameHub|TorrServer|sunshine"
	installer_item="${list_array[select_ans-1]}"
	cd "$PACKAGESPATH"
	if [[ -d "$installer_item" ]]; then rm -rf "$installer_item"
	elif [[ -f "$installer_item" ]]; then rm "$installer_item"; fi
	case "$installer_item" in
	"Pineapple-Linux")
		git clone https://github.com/pineappleEA/Pineapple-Linux
		cd Pineapple-Linux
		sh pineapple.sh
	;;
	"linux-tkg")
		git clone https://github.com/Frogging-Family/linux-tkg
		cd linux-tkg
		makepkg -si
	;;
	"nvidia-all")
		git clone https://github.com/Frogging-Family/nvidia-all.git
		cd nvidia-all
		makepkg -si
	;;
	"wine-tkg-git")
		git clone https://github.com/Frogging-Family/wine-tkg-git
		cd wine-tkg-git
		echo -e "\n [1] - Wine\n [2] - Proton"; read -p ans
		if [[ $ans == "1" ]]; then cd wine-tkg-git
		elif [[ $ans == "2" ]]; then cd proton-tkg; fi
		makepkg -si
	;;
	"GameHub")
		git clone https://github.com/tkashkin/GameHub.git -b refactoring
		cd GameHub
		meson build --prefix=/usr --buildtype=debug
		cd build
		ninja
		sudo ninja install
	;;
	"TorrServer")
		get-latest-release "YouROK/TorrServer" "TorrServer-linux-amd64"
		sudo mv "TorrServer-linux-amd64" "/usr/bin/torrserver"
		sudo chmod +x "/usr/bin/torrserver"
	;;
	"sunshine")
		git clone https://github.com/loki-47-6F-64/sunshine.git --recurse-submodules
		cd sunshine; mkdir build; cd build
		cmake ..
		make -j ${nproc}
		sudo mv sunshine /usr/bin/sunshine
		sudo mv sunshine.service /home/hist/.config/systemd/user/
	esac
}
