#!/bin/bash
packsinstaller() {
	ls "$CONFPATH/packs" > "$TEMPPATH/.packs"
	while read line; do
		if [[ -z "$hi_packs" ]]; then hi_packs="$line"
		else hi_packs="$hi_packs|$line"; fi; done < "$TEMPPATH/.packs"
	listoptions "Packages" "$hi_packs" "" "" "" ""
	selected_package="${list_array[select_ans-1]}"
	source "$CONFPATH/packs/$selected_package"
	cd  $PACKPATH
	case $packagetype in
	"branch")
		name=$(basename -s .git "$packageurl")
		listoptions "Options" "Install${noc} - ${blc}Check \"${cyc}$packageurl${blc}\" for additional information or necessary dependencies${noc}|Update|Uninstall" "" "" "" ""
		if [[ -n "$CONFPATH/packs/$selected_package" ]]; then
			if [[ "$select_ans" == "1" ]]; then
				if [[ -d "$name" ]]; then rm -rf "$name"; fi
				if grep -oq "packagearg" "$CONFPATH/packs/$selected_package"; then eval "git clone $packagearg $packageurl"
				else eval "git clone $packageurl"; fi
				cd "$name"
				if grep -oq "packageinstall" "$CONFPATH/packs/$selected_package"; then packageinstall; fi
			elif [[ "$select_ans" == "2" ]]; then 
				if [[ -d "$name" ]]; then
					cd "$name"; git reset --hard; git pull $packageurl
					listoptions "Install? " "Yes|No" "" "" "" ""
					if [[ $select_ans == "1" ]]; then
						if grep -oq "packageinstall" "$CONFPATH/packs/$selected_package"; then packageinstall; fi; fi
				else echo -e "\nFirst install the ${grc}package${noc}\n"; fi
			elif [[ "$select_ans" == "3" ]]; then
				if [[ -d "$name" ]]; then
					if grep -oq "packageuninstall" "$CONFPATH/packs/$selected_package"; then cd "$name"; packageuninstall; cd ..; fi
					rm -rf "$name"
				else echo -e "\nFirst install the ${grc}package${noc}\n"; fi; fi
		else echo -e "\n${grc}Config file${noc} is ${mac}empty${noc}\n"; fi
	;;
	"release")
		name=$(basename -s .git "$packagename")
		listoptions "Options" "Install|Uninstall" "" "" "" ""
		if [[ -n "$CONFPATH/packs/$selected_package" ]]; then
			if [[ "$select_ans" == "1" ]]; then
				if [[ -d "$name" ]]; then rm -rf "$name"; fi
				mkdir "$name"; cd "$name"
				git-latest "$packagename" "$packagever"
				if grep -oq "packageinstall" "$CONFPATH/packs/$selected_package"; then packageinstall; fi
			elif [[ "$select_ans" == "2" ]]; then
				if grep -oq "packageuninstall" "$CONFPATH/packs/$selected_package"; then packageuninstall; fi
				rm -rf "$name"; fi
		else echo -e "\n${grc}Config file${noc} is ${mac}empty${noc}\n"; fi
	esac
}
