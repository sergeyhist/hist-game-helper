#!/bin/bash
packsinstaller() {
	ls "$CONFPATH/packs" > "$TEMPPATH/.packs"
	while read line; do
		if [[ -z "$hi_packs" ]]; then hi_packs="$line"
		else hi_packs="$hi_packs|$line"; fi; done < "$TEMPPATH/.packs"
	listoptions "Packages" "$hi_packs"
	selected_package="${list_array[select_ans-1]}"
	source "$CONFPATH/packs/$selected_package"
	cd  $PACKPATH; name=$(basename -s .git "$packageurl")
	case $packagetype in
	"branch")
		listoptions "Options" "Install - ${blc}Check \"${cyc}$packageurl${blc}\" for additional information or necessary dependencies${noc}|Update|Uninstall"
		if [[ -n "$CONFPATH/packs/$name" ]]; then
			if [[ "$select_ans" == "1" ]]; then
				if [[ -d "$name" ]]; then rm -rf "$name"; fi
				if [[ $packagevar == "1"?? ]]; then git clone $packagearg $packageurl
				else git clone $packageurl; fi
				cd "$name"
				if [[ $packagevar == ?"1"? ]]; then packageinstall; fi
			elif [[ "$select_ans" == "2" ]]; then 
				if [[ -d "$name" ]]; then
					cd "$name"; git reset --hard
					git pull $packageurl &> "$TEMPPATH/.toolcheck"
					if grep -Fqx "Already up to date." "$TEMPPATH/.toolcheck"; then echo -e "\nAlready ${grc}up to date${noc}!"
					else if [[ $packagevar == ?"1"? ]]; then packageinstall; fi; fi
				else echo -e "\nFirst install the ${grc}package${noc}\n"; fi
			elif [[ "$select_ans" == "3" ]]; then
				if [[ -d "$name" ]]; then
					if [[ $packagevar == ??"1" ]]; then cd "$name"; packageuninstall; cd ..; fi
					rm -rf "$name"
				else echo -e "\nFirst install the ${grc}package${noc}\n"; fi; fi
		else echo -e "\n${grc}Config file${noc} is ${mac}empty${noc}\n"; fi
	;;
	"release")
		listoptions "Options" "Install|Uninstall"
		if [[ -n "$CONFPATH/packs/$name" ]]; then
			if [[ "$select_ans" == "1" ]]; then
				if [[ -d "$name" ]]; then rm -rf "$name"; fi
				git-latest "$packagename" "$packagever"
				cd "$name"
				if [[ $packagevar == "1"? ]]; then packageinstall; fi
			elif [[ "$select_ans" == "2" ]]; then
				if [[ $packagevar == ?"1" ]]; then packageuninstall; fi
				rm -rf "$name"; fi
		else echo -e "\n${grc}Config file${noc} is ${mac}empty${noc}\n"; fi
	esac
}
