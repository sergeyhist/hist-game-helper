#!/bin/bash
runnerfinder() {
	hi_runners="$hi_runners_orig"
	hi_runners_names="$hi_runners_names_orig"
	IFS="|"
	for item in $1; do
		if [[ -f "$item" ]]; then
			while read line; do
					if [[ $(find "$line" -type f -name "proton_dist"*) ]]; then
						proton_tar=$(find "$line" -type f -name "proton_dist"*); proton_tar_dir=$(dirname "$proton_tar")
						if [[ -d "$proton_tar_dir/dist" ]]; then 
							if ! cmp -s "$proton_tar_dir/version" "$proton_tar_dir/dist/version"; then
								rm -rf "$proton_tar_dir/dist"; mkdir "$proton_tar_dir/dist"
								tar -xf "$proton_tar" -C "$proton_tar_dir/dist/"
								cat "$proton_tar_dir/version" > "$proton_tar_dir/dist/version"; fi
						else
							mkdir "$proton_tar_dir/dist"
							tar -xf "$proton_tar" -C "$proton_tar_dir/dist/"; fi; fi
					if [[ $(find "$line" -type f -name "wine") ]]; then
						hi_runners="$hi_runners|$(find "$line" -type f -name "wine")"
						if [[ -f "$line/version" ]]; then
							runner_version="$(cat "$line/version")"
							hi_runners_names="$hi_runners_names|${runner_version##* }"
						else hi_runners_names="$hi_runners_names|$($(find "$line" -type f -name "wine") --version)"; fi; fi
			done < "$item"; fi; done
	IFS="$Def_IFS"
}

prefixfinder() {
	hi_prefixes="$hi_prefixes_orig"
	hi_prefixes_names="$hi_prefixes_names_orig"
	IFS="|"
	for item in $1; do
		if [[ -f "$item" ]]; then
			while read line; do
			if [[ $(find "$line" -type d -name "drive_c") ]]; then
				hi_prefixes="$hi_prefixes|$(dirname "$(find "$line" -type d -name "drive_c")")"
				hi_prefixes_names="$hi_prefixes_names|$(basename "$(dirname "$(find "$line" -type d -name "drive_c")")")"; fi
			done < "$item"; fi; done
	IFS="$Def_IFS"
}

runnerinit() {
	if [[ -z "$selected_runner" ]]; then
		while : ; do
			runnerfinder "$CONFPATH/addrun.cfg|$TEMPPATH/.steamrun"
			listoptions "Runners" "$hi_runners_names|Add new runner" "" "" "" "$hi_runners"
			if [[ ${list_array[select_ans-1]} == "Add new runner" ]]; then addlines "runner" "$CONFPATH/addrun.cfg"
			else selected_runner="${desc_array[select_ans-1]}"; break; fi; done; fi
}

prefixinit() {
	while : ; do
		prefixfinder "$CONFPATH/addpfx.cfg"
		listoptions "Prefixes" "$hi_prefixes_names|Add new prefix|Create new prefix" "" "" "" "$hi_prefixes"
		if [[ ${list_array[select_ans-1]} == "Add new prefix" ]]; then addlines "prefix" "$CONFPATH/addpfx.cfg"
		elif [[ ${list_array[select_ans-1]} == "Create new prefix" ]]; then	prefixcreator
		else selected_prefix="${desc_array[select_ans-1]}"; break; fi; done
}

prefixcreator() {
	if [[ -z "$selected_runner" ]]; then runnerinit; fi
	addlines "prefix" "$CONFPATH/addpfx.cfg"; pfx_path=$line_path
	if [[ ! -d "${pfx_path}/drive_c" ]]; then
		listoptions "Prefix Version" "32bit|64bit" "" "" "" ""
		if [[ "$select_ans" == "1" ]]; then
			WINEARCH=win32 WINEPREFIX="$pfx_path" "$selected_runner" wineboot -u;
		elif [[ "$select_ans" == "2" ]]; then
			WINEPREFIX="$pfx_path" "$selected_runner" wineboot -u; fi; fi
}

prefixcommands() {
	listoptions "Wine Functions" "Wine Config|Control Panel|Task Manager|Explorer|Install/Uninstall Apps|Registry Editor|Kill Running Apps|Force Kill Running Apps|Custom command" "" "" "" ""
	case $select_ans in
	"1")
	command_func="winecfg"
	;;
	"2")
	command_func="control"
	;;
	"3")
	command_func="taskmgr"
	;;
	"4")
	command_func="explorer"
	;;
	"5")
	command_func="uninstaller"
	;;
	"6")
	command_func="regedit"
	;;
	"7")
	command_func="wineserver -k"
	;;
	"8")
	command_func="wineserver -k9"
	;;
	"9")
	generalinput "prefixcommand|none|exit" "${grc}custom prefix command${noc} (Example: ${cyc}notepad.exe${noc})"; command_func="$input_ans"
	esac
	if [[ "$command_func" == "wineserver -k" || "$command_func" == "wineserver -k9" ]]; then eval "WINEPREFIX=\"$selected_prefix\" $command_func"
	else runnerinit; eval "WINEPREFIX=\"$selected_prefix\" \"$selected_runner\" $command_func"; fi
}
