#!/bin/bash
set -euo pipefail
source "$HOME/Hist/Configs/vars"
source "$CONFPATH/main"
source "$CONFPATH/selector"
source "$CONFPATH/launchers"
source "$CONFPATH/wine"
source "$CONFPATH/steam"
source "$CONFPATH/packages"
if [[ -d "$HOME/.steam" ]]; then steamfinder; fi
if [[ -f "/usr/bin/yay" && -f "/usr/bin/checkupdates" ]]; then hi_archupdater="|Arch Updater"; else hi_archupdater=""; fi
listoptions "Hist Linux Utilities" "Launchers Creator|Wine Helper|Steam Helper|Packages Installer$hi_archupdater" "" "" "" ""
case $select_ans in
"1") #Launcher Creator
	ls $LAUNCHPATH > "$TEMPPATH/.launchers"
	while read line; do
		if [[ -z "$hi_launchers" ]]; then hi_launchers="$line"
		else hi_launchers="$hi_launchers|$line"; fi; done < "$TEMPPATH/.launchers"
	listoptions "Launchers Creator" "Create launcher|Edit launcher|Delete launcher|Open launcher in text editor|Run launcher" "" "" "" ""
		if [[ "$select_ans" == "1" ]]; then
			listoptions "Launcher Creator" "Wine App|Linux App" "" "" "" ""
			if [[ "$select_ans" == "1" ]]; then
				launchercreator "wine"
			elif [[ "$select_ans" == "2" ]]; then
				launchercreator "linux"; fi
		elif [[ "$select_ans" == "2" ]]; then
			launchereditor
		elif [[ "$select_ans" == "3" ]]; then
			listoptions "Launchers" "$hi_launchers" "" "" "" ""
			if [[ -L "$LAUNCHPATH/${list_array[select_ans-1]}" && $(readlink -f "$LAUNCHPATH/${list_array[select_ans-1]}") ]]; then
				rm "$(readlink -f "$LAUNCHPATH/${list_array[select_ans-1]}")"; fi
			rm "$LAUNCHPATH/${list_array[select_ans-1]}"
		elif [[ "$select_ans" == "4" ]]; then
			listoptions "Launchers" "$hi_launchers" "" "" "" ""; xdg-open "$LAUNCHPATH/${list_array[select_ans-1]}"
		elif [[ "$select_ans" == "5" ]]; then
			listoptions "Launchers" "$hi_launchers" "" "" "" ""; "$LAUNCHPATH/${list_array[select_ans-1]}"; fi
;;
"2") #Wine Helper
	listoptions "Wine Utilities" "Prefix commands|Winetricks|Dxvk|Vkd3d|Install MF|Install MF-Cab|Install mfplat.dll|Prefixes manager|Runners manager|Reset default prefix" "" "" "" ""
	if [[ "$select_ans" == "1" ]]; then
		prefixinit; prefixcommands		
	elif [[ "$select_ans" == "2" ]]; then
		prefixinit; runnerinit
		generalinput "winetricks|--gui|exit" "${cyc}winetricks arguments${noc}"
		WINEPREFIX="$selected_prefix" WINE="$selected_runner" winetricks $input_ans;
	elif [[ "$select_ans" == "3" ]]; then
		if [[ -d "$PACKPATH/dxvk" ]]; then
			listoptions "Options List" "Install|Uninstall" "" "" "" "" 
			if [[ "$select_ans" == "1" ]]; then update_option="install"
			elif [[ "$select_ans" == "2" ]]; then update_option="uninstall"; fi
			prefixinit
			WINEPREFIX="$selected_prefix" "$PACKPATH/dxvk/dlls/dxvk-master/setup_dxvk.sh" $update_option
		else echo -e "\nInstall ${grc}Dxvk${noc} from ${grc}Packages Installer${noc}!"; fi
	elif [[ "$select_ans" == "4" ]]; then
		if [[ -d "$PACKPATH/vkd3d-proton" ]]; then
			listoptions "Options List" "Install|Uninstall" "" "" "" "" 
			if [[ "$select_ans" == "1" ]]; then update_option="install"
			elif [[ "$select_ans" == "2" ]]; then update_option="uninstall"; fi
			prefixinit
			if [[ ! -f "$selected_prefix/drive_c/windows/system32/d3d12.dll" ]]; then touch "$selected_prefix/drive_c/windows/system32/d3d12.dll"
			elif [[ ! -f "$selected_prefix/drive_c/windows/syswow64/d3d12.dll" ]]; then touch "$selected_prefix/drive_c/windows/syswow64/d3d12.dll"; fi
			WINEPREFIX="$selected_prefix" "$PACKPATH/vkd3d-proton/dlls/vkd3d-proton-master/setup_vkd3d_proton.sh" $update_option
		else echo -e "\nInstall ${grc}Vkd3d${noc} from ${grc}Packages Installer${noc}!"; fi
	elif [[ "$select_ans" == "5" ]]; then
		if [[ -d "$PACKPATH/mf-install" ]]; then
			prefixinit
			WINEPREFIX="$selected_prefix" "$PACKPATH/mf-install/mf-install.sh"
		else echo -e "\nInstall ${grc}MF${noc} from ${grc}Packages Installer${noc}!"; fi
	elif [[ "$select_ans" == "6" ]]; then
		if [[ -d "$PACKPATH/mf-installcab" ]]; then
			prefixinit
			WINEPREFIX="$selected_prefix" "$PACKPATH/mf-installcab/install-mf-64.sh"
		else echo -e "\nInstall ${grc}MF-Cab${noc} from ${grc}Packages Installer${noc}!"; fi
	elif [[ "$select_ans" == "7" ]]; then
		if [[ -d "$PACKPATH/mf-installcab" ]]; then execinit "wine"; cp "$PACKPATH/mf-installcab/mfplat.dll" "$init_result_dir"
		else echo -e "\nInstall ${grc}MF-Cab${noc} from ${grc}Packages Installer${noc}!"; fi
	elif [[ $select_ans == "8"  ]]; then
		listoptions "Lists Manager" "Add prefix|Create prefix|Delete prefix" "" "" "" ""
		if [[ "$select_ans" == "1" ]]; then addlines "prefix" "$CONFPATH/addpfx.cfg"
		elif [[ "$select_ans" == "2" ]]; then prefixcreator
		elif [[ "$select_ans" == "3" ]]; then deletelines "Prefixes" "$CONFPATH/addpfx.cfg"; fi
	elif [[ $select_ans == "9"  ]]; then
		listoptions "Lists Manager" "Add runner|Delete runner" "" "" "" ""
		if [[ "$select_ans" == "1" ]]; then addlines "runner" "$CONFPATH/addrun.cfg"
		elif [[ "$select_ans" == "2" ]]; then deletelines "Runners" "$CONFPATH/addrun.cfg" "line" "" ""; fi
	elif [[ $select_ans == "10"  ]]; then
		listoptions "Are you sure?" "Yes|No" "" "" "" ""
		if [[ "$select_ans" == "1" ]]; then
			rm -rf "$HOME/.wine"; mkdir "$HOME/.wine"; runnerinit; pfx_runner="$init_result"; WINEPREFIX="$HOME/.wine" "$pfx_runner" wineboot -u; fi; fi
;;
"3") #Steam Helper
	listoptions "Steam Helper" "Set game launch options|Game prefix commands|Winetricks|Reset game prefix|Install MF|Install MFCab|Install mfplat.dll" "" "" "" ""
	if [[ $select_ans == "1" ]]; then steamlauchoptions
	elif [[ $select_ans == "2" ]]; then
		readfiles "Steam game prefixes" "$TEMPPATH/.steampfx"; selected_prefix="$read_result_dir"; prefixcommands
	elif [[ $select_ans == "3" ]]; then
		readfiles "Steam game prefixes" "$TEMPPATH/.steampfx"; selected_prefix="$read_result_dir"; runnerinit
		generalinput "winetricks|--gui|exit" "${cyc}winetricks arguments${noc}"
		WINEPREFIX="$selected_prefix" WINE="$selected_runner" winetricks $input_ans
	elif [[ $select_ans == "4" ]]; then deletelines "Steam game prefixes" "$TEMPPATH/.steamgamecompat"
	elif [[ $select_ans == "5" ]]; then
		if [[ -d "$PACKPATH/mf-install" ]]; then
			readfiles "Steam game prefixes" "$TEMPPATH/.steampfx"; selected_prefix="$read_result_dir"
			WINEPREFIX="$selected_prefix" "$PACKPATH/mf-install/mf-install.sh"
		else echo -e "\nInstall ${grc}MF${noc} from ${grc}Packages Installer${noc}!"; fi
	elif [[ $select_ans == "6" ]]; then
		if [[ -d "$PACKPATH/mf-installcab" ]]; then
			readfiles "Steam game prefixes" "$TEMPPATH/.steampfx"; selected_prefix="$read_result_dir"
			WINEPREFIX="$selected_prefix" "$PACKPATH/mf-installcab/install-mf-64.sh"
		else echo -e "\nInstall ${grc}MF-Cab${noc} from ${grc}Packages Installer${noc}!"; fi
	elif [[ "$select_ans" == "7" ]]; then
		if [[ -d "$PACKPATH/mf-installcab" ]]; then
			readfiles "Steam games" "$TEMPPATH/.steamdirs"
			find "$read_result_dir" -name "*.exe" | while read line; do echo -e "$(basename -s .exe "$line") | $line" >> "$TEMPPATH/.steamexes"; done
			readfiles "Exe files" "$TEMPPATH/.steamexes"
			cp "$PACKPATH/mf-installcab/mfplat.dll" "$(dirname "$read_result_dir")"
		else echo -e "\nInstall ${grc}MF-Cab${noc} from ${grc}Packages Installer${noc}!"; fi; fi
		
;;
"4") #Packages Installer
	packsinstaller
;;
"5") #Arch Updater
	if [[ $(sudo pacman -Qu; yay -Qua) ]]; then
		echo -e "\n ${mac}Updates:${noc}\n\n$(checkupdates; yay -Qua)"
		listoptions "Update?" "Yes|No" "" "" "" ""
		if [[ "$select_ans" == "1" ]]; then eval "sudo pacman -Syu; yay -Syua"; fi
	else echo -e "\n ${mac}No updates found${noc}"; fi
esac
